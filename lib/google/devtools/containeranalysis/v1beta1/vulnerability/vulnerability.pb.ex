defmodule Grafeas.V1beta1.Vulnerability.Severity do
  @moduledoc false
  use Protobuf, enum: true, syntax: :proto3
  @type t :: integer | :SEVERITY_UNSPECIFIED | :MINIMAL | :LOW | :MEDIUM | :HIGH | :CRITICAL

  field :SEVERITY_UNSPECIFIED, 0
  field :MINIMAL, 1
  field :LOW, 2
  field :MEDIUM, 3
  field :HIGH, 4
  field :CRITICAL, 5
end

defmodule Grafeas.V1beta1.Vulnerability.Vulnerability.Detail do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          cpe_uri: String.t(),
          package: String.t(),
          min_affected_version: Grafeas.V1beta1.Package.Version.t() | nil,
          max_affected_version: Grafeas.V1beta1.Package.Version.t() | nil,
          severity_name: String.t(),
          description: String.t(),
          fixed_location: Grafeas.V1beta1.Vulnerability.VulnerabilityLocation.t() | nil,
          package_type: String.t(),
          is_obsolete: boolean,
          source_update_time: Google.Protobuf.Timestamp.t() | nil
        }

  defstruct [
    :cpe_uri,
    :package,
    :min_affected_version,
    :max_affected_version,
    :severity_name,
    :description,
    :fixed_location,
    :package_type,
    :is_obsolete,
    :source_update_time
  ]

  field :cpe_uri, 1, type: :string, json_name: "cpeUri"
  field :package, 2, type: :string

  field :min_affected_version, 3,
    type: Grafeas.V1beta1.Package.Version,
    json_name: "minAffectedVersion"

  field :max_affected_version, 4,
    type: Grafeas.V1beta1.Package.Version,
    json_name: "maxAffectedVersion"

  field :severity_name, 5, type: :string, json_name: "severityName"
  field :description, 6, type: :string

  field :fixed_location, 7,
    type: Grafeas.V1beta1.Vulnerability.VulnerabilityLocation,
    json_name: "fixedLocation"

  field :package_type, 8, type: :string, json_name: "packageType"
  field :is_obsolete, 9, type: :bool, json_name: "isObsolete"
  field :source_update_time, 10, type: Google.Protobuf.Timestamp, json_name: "sourceUpdateTime"

  def transform_module(), do: nil
end

defmodule Grafeas.V1beta1.Vulnerability.Vulnerability.WindowsDetail.KnowledgeBase do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          name: String.t(),
          url: String.t()
        }

  defstruct [:name, :url]

  field :name, 1, type: :string
  field :url, 2, type: :string

  def transform_module(), do: nil
end

defmodule Grafeas.V1beta1.Vulnerability.Vulnerability.WindowsDetail do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          cpe_uri: String.t(),
          name: String.t(),
          description: String.t(),
          fixing_kbs: [
            Grafeas.V1beta1.Vulnerability.Vulnerability.WindowsDetail.KnowledgeBase.t()
          ]
        }

  defstruct [:cpe_uri, :name, :description, :fixing_kbs]

  field :cpe_uri, 1, type: :string, json_name: "cpeUri"
  field :name, 2, type: :string
  field :description, 3, type: :string

  field :fixing_kbs, 4,
    repeated: true,
    type: Grafeas.V1beta1.Vulnerability.Vulnerability.WindowsDetail.KnowledgeBase,
    json_name: "fixingKbs"

  def transform_module(), do: nil
end

defmodule Grafeas.V1beta1.Vulnerability.Vulnerability do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          cvss_score: float | :infinity | :negative_infinity | :nan,
          severity: Grafeas.V1beta1.Vulnerability.Severity.t(),
          details: [Grafeas.V1beta1.Vulnerability.Vulnerability.Detail.t()],
          cvss_v3: Grafeas.V1beta1.Vulnerability.CVSSv3.t() | nil,
          windows_details: [Grafeas.V1beta1.Vulnerability.Vulnerability.WindowsDetail.t()],
          source_update_time: Google.Protobuf.Timestamp.t() | nil
        }

  defstruct [:cvss_score, :severity, :details, :cvss_v3, :windows_details, :source_update_time]

  field :cvss_score, 1, type: :float, json_name: "cvssScore"
  field :severity, 2, type: Grafeas.V1beta1.Vulnerability.Severity, enum: true
  field :details, 3, repeated: true, type: Grafeas.V1beta1.Vulnerability.Vulnerability.Detail
  field :cvss_v3, 4, type: Grafeas.V1beta1.Vulnerability.CVSSv3, json_name: "cvssV3"

  field :windows_details, 5,
    repeated: true,
    type: Grafeas.V1beta1.Vulnerability.Vulnerability.WindowsDetail,
    json_name: "windowsDetails"

  field :source_update_time, 6, type: Google.Protobuf.Timestamp, json_name: "sourceUpdateTime"

  def transform_module(), do: nil
end

defmodule Grafeas.V1beta1.Vulnerability.Details do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          type: String.t(),
          severity: Grafeas.V1beta1.Vulnerability.Severity.t(),
          cvss_score: float | :infinity | :negative_infinity | :nan,
          package_issue: [Grafeas.V1beta1.Vulnerability.PackageIssue.t()],
          short_description: String.t(),
          long_description: String.t(),
          related_urls: [Grafeas.V1beta1.RelatedUrl.t()],
          effective_severity: Grafeas.V1beta1.Vulnerability.Severity.t()
        }

  defstruct [
    :type,
    :severity,
    :cvss_score,
    :package_issue,
    :short_description,
    :long_description,
    :related_urls,
    :effective_severity
  ]

  field :type, 1, type: :string
  field :severity, 2, type: Grafeas.V1beta1.Vulnerability.Severity, enum: true
  field :cvss_score, 3, type: :float, json_name: "cvssScore"

  field :package_issue, 4,
    repeated: true,
    type: Grafeas.V1beta1.Vulnerability.PackageIssue,
    json_name: "packageIssue"

  field :short_description, 5, type: :string, json_name: "shortDescription"
  field :long_description, 6, type: :string, json_name: "longDescription"

  field :related_urls, 7,
    repeated: true,
    type: Grafeas.V1beta1.RelatedUrl,
    json_name: "relatedUrls"

  field :effective_severity, 8,
    type: Grafeas.V1beta1.Vulnerability.Severity,
    enum: true,
    json_name: "effectiveSeverity"

  def transform_module(), do: nil
end

defmodule Grafeas.V1beta1.Vulnerability.PackageIssue do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          affected_location: Grafeas.V1beta1.Vulnerability.VulnerabilityLocation.t() | nil,
          fixed_location: Grafeas.V1beta1.Vulnerability.VulnerabilityLocation.t() | nil,
          severity_name: String.t()
        }

  defstruct [:affected_location, :fixed_location, :severity_name]

  field :affected_location, 1,
    type: Grafeas.V1beta1.Vulnerability.VulnerabilityLocation,
    json_name: "affectedLocation"

  field :fixed_location, 2,
    type: Grafeas.V1beta1.Vulnerability.VulnerabilityLocation,
    json_name: "fixedLocation"

  field :severity_name, 3, type: :string, json_name: "severityName"

  def transform_module(), do: nil
end

defmodule Grafeas.V1beta1.Vulnerability.VulnerabilityLocation do
  @moduledoc false
  use Protobuf, syntax: :proto3

  @type t :: %__MODULE__{
          cpe_uri: String.t(),
          package: String.t(),
          version: Grafeas.V1beta1.Package.Version.t() | nil
        }

  defstruct [:cpe_uri, :package, :version]

  field :cpe_uri, 1, type: :string, json_name: "cpeUri"
  field :package, 2, type: :string
  field :version, 3, type: Grafeas.V1beta1.Package.Version

  def transform_module(), do: nil
end
